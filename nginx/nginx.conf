upstream elasticsearch {
    server mydomain:9200;
    server mydomain:9202;
    server mydomain:9203;
    keepalive 64;
}

upstream kibana {
    server mydomain:5601;
    keepalive 64;
}

upstream minio_s3 {
    least_conn;
    server mydomain:9900;
}
upstream minio_console {
    least_conn;
    server mydomain:9901;
}

server {
    listen 443 ssl;
    server_name elasticsearch.mydomain;
    client_max_body_size 50m;
    ssl_certificate /etc/nginx/ssl/certs/elasticsearch/elasticsearch.crt;
    ssl_certificate_key /etc/nginx/ssl/certs/elasticsearch/elasticsearch.key;
    ssl_verify_client off;

    location / {
        proxy_pass https://elasticsearch;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass_header Access-Control-Allow-Origin;
        proxy_pass_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;
        add_header Access-Control-Allow-Headers 'X-Requested-With, Content-Type';
        add_header Access-Control-Allow-Credentials true;
    }
}

server {
    listen 443 ssl;
    server_name kibana.mydomain;
    client_max_body_size 50m;
    ssl_certificate /etc/nginx/ssl/certs/kibana/kibana.crt;
    ssl_certificate_key /etc/nginx/ssl/certs/kibana/kibana.key;
    ssl_verify_client off;

    location / {
        proxy_pass https://kibana;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass_header Access-Control-Allow-Origin;
        proxy_pass_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;
        add_header Access-Control-Allow-Headers 'X-Requested-With, Content-Type';
        add_header Access-Control-Allow-Credentials true;
    }
}

server {
	listen 80;
    server_name s3.mydomain ;
	# Allow special characters in headers
   	ignore_invalid_headers off;
   	# Allow any size file to be uploaded.
   	# Set to a value such as 1000m; to restrict file size to a specific value
   	client_max_body_size 0;
   	# Disable buffering
   	proxy_buffering off;
   	proxy_request_buffering off;

	location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
    
        proxy_pass http://minio_s3; # This uses the upstream directive definition to load balance
	 }

	location /minio/ui/ {
        rewrite ^/minio/ui/(.*) /$1 break;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;

        # This is necessary to pass the correct IP to be hashed
        real_ip_header X-Real-IP;

        proxy_connect_timeout 300;

        # To support websockets in MinIO versions released after January 2023
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
        # Uncomment the following line to set the Origin request to an empty string
        # proxy_set_header Origin '';

        chunked_transfer_encoding off;

        proxy_pass http://minio_console; # This uses the upstream directive definition to load balance
	}
}

